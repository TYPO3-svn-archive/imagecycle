plugin.tx_imagecycle_pi1 {

	linkTarget = {$plugin.tx_imagecycle_pi1.linkTarget}
	extlinkTarget = {$plugin.tx_imagecycle_pi1.extlinkTarget}
	showcaption = {$plugin.tx_imagecycle_pi1.showcaption}
	random = {$plugin.tx_imagecycle_pi1.random}
	stopOnMousover = {$plugin.tx_imagecycle_pi1.stopOnMousover}
	disableRecursion = {$plugin.tx_imagecycle_pi1.disableRecursion}
	jQueryNoConflict = {$plugin.tx_imagecycle_pi1.jQueryNoConflict}
	jsInFooter = {$plugin.tx_imagecycle_pi1.jsInFooter}

	jQueryLibrary = {$plugin.tx_imagecycle_pi1.file.jQueryLibrary}
	jQueryCycle = {$plugin.tx_imagecycle_pi1.file.jQueryCycle}
	jQueryCaption = {$plugin.tx_imagecycle_pi1.file.jQueryCaption}

	imagewidth = {$plugin.tx_imagecycle_pi1.imagewidth}
	imageheight = {$plugin.tx_imagecycle_pi1.imageheight}

	type = {$plugin.tx_imagecycle_pi1.type}
	transition = {$plugin.tx_imagecycle_pi1.transition}
	transitionDir = {$plugin.tx_imagecycle_pi1.transitionDir}
	transitionDuration = {$plugin.tx_imagecycle_pi1.transitionDuration}
	displayDuration = {$plugin.tx_imagecycle_pi1.displayDuration}
	delayDuration = {$plugin.tx_imagecycle_pi1.delayDuration}
	sync = {$plugin.tx_imagecycle_pi1.sync}
	options = {$plugin.tx_imagecycle_pi1.options}

	cycle {
		normal {
			image {
				file.import.data = register:file
				file.width.data = register:imagewidth
				file.height.data = register:imageheight
				imageLinkWrap < tt_content.image.20.1.imageLinkWrap
				imageHrefWrap {
					enable.data = register:href
					typolink {
						parameter.data = register:href
						title.data = register:caption
						target = {$plugin.tx_imagecycle_pi1.linkTarget}
						extTarget = {$plugin.tx_imagecycle_pi1.extlinkTarget}
					}
				}
				altText {
					data = register:caption
					stripHtml = 1
				}
				titleText < .altText
				longdescURL < .altText
			}
			stdWrap {
				dataWrap = <div id="{register:key}" style="display:none;"> | </div>
				required = 1
			}
		}
		header < .normal
		content < .normal
	}
	_CSS_DEFAULT_STYLE (
.tx-imagecycle-pi1 div.caption {
	margin: 0;
	padding: 0;
	position: relative;
}
.tx-imagecycle-pi1 div.caption p {
	position: absolute;
	margin: 0;
	padding: 5px;
	font-size: .9em;
	bottom: 0;
	left: 0;
	background: black;
	color: white;
	opacity: .7;
}
.tx-imagecycle-pi1 div.caption img {
	margin: 0;
	padding: 0;
	display: block;
}
	)
}

#
# For content elements
#
#includeLibs.imagecycle = EXT:imagecycle/class.tx_imagecycle.php
#lib.tt_content_image_20 < tt_content.image.20
#lib.imagecycle < tt_content.image.20
#lib.imagecycle {
#	imgMax = 1000
#	imageStdWrap.innerWrap = <div class="tx-imagecycle-pi1"><div id="imagecycle_{field:uid}" style="display:none;"> | </div></div>
#	imageStdWrap.innerWrap.insertData = 1
#	imageStdWrapNoWidth.innerWrap < .imageStdWrap.innerWrap
#	rendering.simple.caption >
#	renderMethod = simple
#	stdWrap.preUserFunc = tx_imagecycle->getSlideshow
#}
#tt_content.image.20 >
#tt_content.image.20 = CASE
#tt_content.image.20 {
#	key.field = tx_imagecycle_activate
#	default < lib.tt_content_image_20
#	1 < lib.imagecycle
#}
#tt_content.textpic.20 >
#tt_content.textpic.20 = CASE
#tt_content.textpic.20 {
#	key.field = tx_imagecycle_activate
#	default < tt_content.image.20.default
#	default {
#		text {
#			10 < tt_content.textpic.20.1.text.10
#			20 < tt_content.text.20
#			wrap = <div class="csc-textpic-text"> | </div>
#		}
#	}
#	1 < tt_content.image.20.1
#	1 {
#		text.10 = COA
#		text.10 {
#			if.value = 24
#			if.isGreaterThan.field = imageorient
#			10 =< lib.stdheader
#			10.stdWrap.dataWrap = <div class="csc-textpicHeader csc-textpicHeader-{field:imageorient}">|</div>
#		}
#		text.20 < tt_content.text.20
#		text.wrap = <div class="csc-textpic-text"> | </div>
#	}
#}

